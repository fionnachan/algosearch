{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/kevguy/shopify-integration/1.0.0"
    },
    {
      "description": "Development",
      "url": "https://shopify-integration-dev.choco-up.com"
    },
    {
      "description": "UAT",
      "url": "https://shopify-integration-uat.choco-up.com"
    },
    {
      "description": "Production",
      "url": "https://shopify-integration.choco-up.com"
    }
  ],
  "info": {
    "version": "1.0.0",
    "title": "Shopify Integration Service API",
    "description": "Kevin: Please ignore this, the yaml sounds useful so I'm too lazy to delete it...... for now.\n\nThis is an example of using OAuth2 Access Code Flow in a specification to\ndescribe security to your API.\n\nYou can use the following command to retrieve the auth token:\n```\ncurl --location --request POST 'https://keycloak.dev.coherent.com.hk/auth/realms/coherent/protocol/openid-connect/token' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'client_id=epos' \\\n--data-urlencode 'grant_type=password' \\\n--data-urlencode 'username=kevin.lai@coherent.com.hk' \\\n--data-urlencode 'password=Password!1234' | jq '.access_token'\n```\n"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "default": "Internal Server Error"
          }
        }
      },
      "BadRequestErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "default": "Bad Request Error"
          }
        }
      },
      "HealthCheckOkResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "default": "ok"
          },
          "build": {
            "type": "string",
            "default": "a123456"
          }
        }
      },
      "HealthCheckInternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "default": "db not ready"
          }
        }
      }
    }
  },
  "paths": {
    "/debug/readiness": {
      "get": {
        "security": [],
        "summary": "Health Check",
        "description": "This method is used to check if server working normally.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/HealthCheckOkResponse"
                    }
                  ]
                },
                "examples": {
                  "EverythingOK": {
                    "description": "Everything is working normally",
                    "value": {
                      "status": "ok",
                      "build": "123456"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/HealthCheckInternalServerErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "DbCheckFail": {
                    "description": "Server fails to connect to database.",
                    "value": {
                      "error": "db not ready"
                    }
                  },
                  "DbCacheCheckFail": {
                    "description": "Server fails to connect to database cache.",
                    "value": {
                      "error": "db cache not ready"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/worker/jobs": {
      "get": {
        "security": [],
        "summary": "Ongoing Jobs",
        "description": "This method is used for users to see ongoing integration jobs that are running on this service",
        "responses": {
          "200": {
            "description": "The list of job keys that represent the jobs that are ongoing.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "List": {
                    "description": "An example list of keys",
                    "value": [
                      "123",
                      "234",
                      "345"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/worker/stop-job": {
      "parameters": [
        {
          "in": "query",
          "name": "key",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The job key to be cancelled."
        }
      ],
      "post": {
        "security": [],
        "summary": "Stop Job",
        "description": "This method is used for cancelling an ongoing job.",
        "responses": {
          "200": {
            "description": "The list of job keys that represent the jobs that are ongoing."
          }
        }
      }
    },
    "/v1/generate-access-code": {
      "parameters": [
        {
          "in": "query",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The authorization code supplied by Shopify."
        },
        {
          "in": "query",
          "name": "shop",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The Shopify store name (without the `myshopify.com`)."
        },
        {
          "in": "query",
          "name": "timestamp",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The timestamp when Shopify generates the authorization code."
        },
        {
          "in": "query",
          "name": "hmac",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The Hash-based Message Authentication Code (HMAC). It is a message authentication code that uses a cryptographic key in conjunction with a hash function for us to verify that the request is genuinely from\n"
        },
        {
          "in": "query",
          "name": "start_integration",
          "required": false,
          "schema": {
            "type": "boolean"
          },
          "description": "Whether to start the integration right away"
        }
      ],
      "get": {
        "security": [],
        "summary": "Shopify Redirect URL",
        "description": "This method is used for Shopify to send authorization code to so the server can retrieve an access token, which in turn saves to the database.",
        "tags": [
          "Custom App"
        ],
        "responses": {
          "301": {
            "description": "The redirect url which returns client back to the application page.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                },
                "examples": {
                  "301SuccessInstallation": {
                    "description": "Redirect URI if installation is successful.",
                    "value": "www.<FrontendEndpoint>/application/sales"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Very possibly can't pass HMAC check.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "HmacCheckFail": {
                    "description": "Request fails to pass HMAC check.",
                    "value": {
                      "message": "message invalid, failed to pass HMAC validation"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/start-integration/:company_id": {
      "parameters": [
        {
          "in": "query",
          "name": "company_id",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The Company ID to do integration with."
        }
      ],
      "get": {
        "security": [],
        "summary": "Shopify Integraton",
        "description": "This method is used for the server to start integration with the company specified.",
        "tags": [
          "Custom App"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "source": "curl --location --request GET 'https://wc-integration-uat.choco-up.com/v1/start-integration/7bc4ea37-2423-49b6-ba3a-07720260cda3?store_url=https://car-learning.com'\n"
          },
          {
            "lang": "Javascript",
            "source": "var requestOptions = {\n  method: 'GET',\n  redirect: 'follow'\n};\n\nfetch(\"https://shopify-integration-uat.choco-up.com/v1/start-integration/7bc4ea37-2423-49b6-ba3a-07720260cda3/archiology-design\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n"
          },
          {
            "lang": "Python",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"shopify-integration-uat.choco-up.com\")\npayload = ''\nheaders = {}\nconn.request(\"GET\", \"/v1/start-integration/7bc4ea37-2423-49b6-ba3a-07720260cda3/archiology-design\", payload, headers)\nres = conn.getresponse()\ndata = res.read()\nprint(data.decode(\"utf-8\"))\n"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n  \"fmt\"\n  \"net/http\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n\n  url := \"https://shopify-integration-uat.choco-up.com/v1/start-integration/7bc4ea37-2423-49b6-ba3a-07720260cda3/archiology-design\"\n  method := \"GET\"\n\n  client := &http.Client {\n  }\n  req, err := http.NewRequest(method, url, nil)\n\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  res, err := client.Do(req)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  defer res.Body.Close()\n\n  body, err := ioutil.ReadAll(res.Body)\n  if err != nil {\n    fmt.Println(err)\n    return\n  }\n  fmt.Println(string(body))\n}\n"
          }
        ]
      }
    },
    "/v1/public/generate-installation-link": {
      "parameters": [
        {
          "in": "query",
          "name": "shop",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The Shopify store name (without the `myshopify.com`)."
        }
      ],
      "get": {
        "security": [],
        "summary": "Shopify Installation URL",
        "description": "This method is used for client to request an installation to Choco's Shopify public app.",
        "tags": [
          "Public App"
        ],
        "responses": {
          "308": {
            "description": "Installation link is generated.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/v1/public/generate-access-code": {
      "parameters": [
        {
          "in": "query",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The authorization code supplied by Shopify."
        },
        {
          "in": "query",
          "name": "shop",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The Shopify store name (without the `myshopify.com`)."
        },
        {
          "in": "query",
          "name": "timestamp",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The timestamp when Shopify generates the authorization code."
        },
        {
          "in": "query",
          "name": "hmac",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The Hash-based Message Authentication Code (HMAC). It is a message authentication code that uses a cryptographic key in conjunction with a hash function for us to verify that the request is genuinely from\n"
        },
        {
          "in": "query",
          "name": "start_integration",
          "required": false,
          "schema": {
            "type": "boolean"
          },
          "description": "Whether to start the integration right away"
        }
      ],
      "get": {
        "security": [],
        "summary": "Shopify Redirect URL",
        "description": "This method is used for Shopify to send authorization code to so the server can retrieve an access token, which in turn saves to the database.",
        "tags": [
          "Public App"
        ],
        "responses": {
          "301": {
            "description": "The redirect url which returns client back to the application page.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                },
                "examples": {
                  "301SuccessInstallation": {
                    "description": "Redirect URI if installation is successful.",
                    "value": "www.<FrontendEndpoint>/application/sales"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Very possibly can't pass HMAC check.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BadRequestErrorResponse"
                    }
                  ]
                },
                "examples": {
                  "HmacCheckFail": {
                    "description": "Request fails to pass HMAC check.",
                    "value": {
                      "message": "essage invalid, failed to pass HMAC validation"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/public/start-integration/{company_id}": {
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The Company ID to do integration with."
        }
      ],
      "get": {
        "security": [],
        "summary": "Shopify Integraton",
        "description": "This method is used for the server to start integration with the company specified.",
        "tags": [
          "Public App"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InternalServerErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}